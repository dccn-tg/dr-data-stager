// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Donders-Institute/dr-data-stager/pkg/swagger/client/models"
)

// GetRdmTypeProjectNumberReader is a Reader for the GetRdmTypeProjectNumber structure.
type GetRdmTypeProjectNumberReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRdmTypeProjectNumberReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRdmTypeProjectNumberOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetRdmTypeProjectNumberNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRdmTypeProjectNumberInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /rdm/{type}/project/{number}] GetRdmTypeProjectNumber", response, response.Code())
	}
}

// NewGetRdmTypeProjectNumberOK creates a GetRdmTypeProjectNumberOK with default headers values
func NewGetRdmTypeProjectNumberOK() *GetRdmTypeProjectNumberOK {
	return &GetRdmTypeProjectNumberOK{}
}

/*
GetRdmTypeProjectNumberOK describes a response with status code 200, with default header values.

success
*/
type GetRdmTypeProjectNumberOK struct {
	Payload *models.Collection
}

// IsSuccess returns true when this get rdm type project number o k response has a 2xx status code
func (o *GetRdmTypeProjectNumberOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get rdm type project number o k response has a 3xx status code
func (o *GetRdmTypeProjectNumberOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get rdm type project number o k response has a 4xx status code
func (o *GetRdmTypeProjectNumberOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get rdm type project number o k response has a 5xx status code
func (o *GetRdmTypeProjectNumberOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get rdm type project number o k response a status code equal to that given
func (o *GetRdmTypeProjectNumberOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get rdm type project number o k response
func (o *GetRdmTypeProjectNumberOK) Code() int {
	return 200
}

func (o *GetRdmTypeProjectNumberOK) Error() string {
	return fmt.Sprintf("[GET /rdm/{type}/project/{number}][%d] getRdmTypeProjectNumberOK  %+v", 200, o.Payload)
}

func (o *GetRdmTypeProjectNumberOK) String() string {
	return fmt.Sprintf("[GET /rdm/{type}/project/{number}][%d] getRdmTypeProjectNumberOK  %+v", 200, o.Payload)
}

func (o *GetRdmTypeProjectNumberOK) GetPayload() *models.Collection {
	return o.Payload
}

func (o *GetRdmTypeProjectNumberOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Collection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRdmTypeProjectNumberNotFound creates a GetRdmTypeProjectNumberNotFound with default headers values
func NewGetRdmTypeProjectNumberNotFound() *GetRdmTypeProjectNumberNotFound {
	return &GetRdmTypeProjectNumberNotFound{}
}

/*
GetRdmTypeProjectNumberNotFound describes a response with status code 404, with default header values.

collection not found
*/
type GetRdmTypeProjectNumberNotFound struct {
	Payload string
}

// IsSuccess returns true when this get rdm type project number not found response has a 2xx status code
func (o *GetRdmTypeProjectNumberNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get rdm type project number not found response has a 3xx status code
func (o *GetRdmTypeProjectNumberNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get rdm type project number not found response has a 4xx status code
func (o *GetRdmTypeProjectNumberNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get rdm type project number not found response has a 5xx status code
func (o *GetRdmTypeProjectNumberNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get rdm type project number not found response a status code equal to that given
func (o *GetRdmTypeProjectNumberNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get rdm type project number not found response
func (o *GetRdmTypeProjectNumberNotFound) Code() int {
	return 404
}

func (o *GetRdmTypeProjectNumberNotFound) Error() string {
	return fmt.Sprintf("[GET /rdm/{type}/project/{number}][%d] getRdmTypeProjectNumberNotFound  %+v", 404, o.Payload)
}

func (o *GetRdmTypeProjectNumberNotFound) String() string {
	return fmt.Sprintf("[GET /rdm/{type}/project/{number}][%d] getRdmTypeProjectNumberNotFound  %+v", 404, o.Payload)
}

func (o *GetRdmTypeProjectNumberNotFound) GetPayload() string {
	return o.Payload
}

func (o *GetRdmTypeProjectNumberNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRdmTypeProjectNumberInternalServerError creates a GetRdmTypeProjectNumberInternalServerError with default headers values
func NewGetRdmTypeProjectNumberInternalServerError() *GetRdmTypeProjectNumberInternalServerError {
	return &GetRdmTypeProjectNumberInternalServerError{}
}

/*
GetRdmTypeProjectNumberInternalServerError describes a response with status code 500, with default header values.

failure
*/
type GetRdmTypeProjectNumberInternalServerError struct {
	Payload *models.ResponseBody500
}

// IsSuccess returns true when this get rdm type project number internal server error response has a 2xx status code
func (o *GetRdmTypeProjectNumberInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get rdm type project number internal server error response has a 3xx status code
func (o *GetRdmTypeProjectNumberInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get rdm type project number internal server error response has a 4xx status code
func (o *GetRdmTypeProjectNumberInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get rdm type project number internal server error response has a 5xx status code
func (o *GetRdmTypeProjectNumberInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get rdm type project number internal server error response a status code equal to that given
func (o *GetRdmTypeProjectNumberInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get rdm type project number internal server error response
func (o *GetRdmTypeProjectNumberInternalServerError) Code() int {
	return 500
}

func (o *GetRdmTypeProjectNumberInternalServerError) Error() string {
	return fmt.Sprintf("[GET /rdm/{type}/project/{number}][%d] getRdmTypeProjectNumberInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRdmTypeProjectNumberInternalServerError) String() string {
	return fmt.Sprintf("[GET /rdm/{type}/project/{number}][%d] getRdmTypeProjectNumberInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRdmTypeProjectNumberInternalServerError) GetPayload() *models.ResponseBody500 {
	return o.Payload
}

func (o *GetRdmTypeProjectNumberInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseBody500)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
