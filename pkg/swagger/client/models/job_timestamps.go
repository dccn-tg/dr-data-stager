// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// JobTimestamps job timestamps
//
// swagger:model jobTimestamps
type JobTimestamps struct {

	// timestamp at which the job is completed, -62135596800 (0001-01-01T00:00:00) if not applicable.
	CompletedAt int64 `json:"completedAt,omitempty"`

	// timestamp at which the job is created.
	CreatedAt int64 `json:"createdAt,omitempty"`

	// timestamp at which the job failed the last time, -62135596800 (0001-01-01T00:00:00) if not applicable.
	LastFailedAt int64 `json:"lastFailedAt,omitempty"`

	// timestamp at which the job will be processed, -62135596800 (0001-01-01T00:00:00) if not applicable.
	NextProcessAt int64 `json:"nextProcessAt,omitempty"`
}

// Validate validates this job timestamps
func (m *JobTimestamps) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this job timestamps based on context it is used
func (m *JobTimestamps) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *JobTimestamps) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *JobTimestamps) UnmarshalBinary(b []byte) error {
	var res JobTimestamps
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
