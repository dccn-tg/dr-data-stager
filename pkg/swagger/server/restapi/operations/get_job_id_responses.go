// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Donders-Institute/dr-data-stager/pkg/swagger/server/models"
)

// GetJobIDOKCode is the HTTP code returned for type GetJobIDOK
const GetJobIDOKCode int = 200

/*GetJobIDOK success

swagger:response getJobIdOK
*/
type GetJobIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseBodyJobInfo `json:"body,omitempty"`
}

// NewGetJobIDOK creates GetJobIDOK with default headers values
func NewGetJobIDOK() *GetJobIDOK {

	return &GetJobIDOK{}
}

// WithPayload adds the payload to the get job Id o k response
func (o *GetJobIDOK) WithPayload(payload *models.ResponseBodyJobInfo) *GetJobIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get job Id o k response
func (o *GetJobIDOK) SetPayload(payload *models.ResponseBodyJobInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetJobIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetJobIDBadRequestCode is the HTTP code returned for type GetJobIDBadRequest
const GetJobIDBadRequestCode int = 400

/*GetJobIDBadRequest bad request

swagger:response getJobIdBadRequest
*/
type GetJobIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseBody400 `json:"body,omitempty"`
}

// NewGetJobIDBadRequest creates GetJobIDBadRequest with default headers values
func NewGetJobIDBadRequest() *GetJobIDBadRequest {

	return &GetJobIDBadRequest{}
}

// WithPayload adds the payload to the get job Id bad request response
func (o *GetJobIDBadRequest) WithPayload(payload *models.ResponseBody400) *GetJobIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get job Id bad request response
func (o *GetJobIDBadRequest) SetPayload(payload *models.ResponseBody400) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetJobIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetJobIDNotFoundCode is the HTTP code returned for type GetJobIDNotFound
const GetJobIDNotFoundCode int = 404

/*GetJobIDNotFound job not found

swagger:response getJobIdNotFound
*/
type GetJobIDNotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetJobIDNotFound creates GetJobIDNotFound with default headers values
func NewGetJobIDNotFound() *GetJobIDNotFound {

	return &GetJobIDNotFound{}
}

// WithPayload adds the payload to the get job Id not found response
func (o *GetJobIDNotFound) WithPayload(payload string) *GetJobIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get job Id not found response
func (o *GetJobIDNotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetJobIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetJobIDInternalServerErrorCode is the HTTP code returned for type GetJobIDInternalServerError
const GetJobIDInternalServerErrorCode int = 500

/*GetJobIDInternalServerError failure

swagger:response getJobIdInternalServerError
*/
type GetJobIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseBody500 `json:"body,omitempty"`
}

// NewGetJobIDInternalServerError creates GetJobIDInternalServerError with default headers values
func NewGetJobIDInternalServerError() *GetJobIDInternalServerError {

	return &GetJobIDInternalServerError{}
}

// WithPayload adds the payload to the get job Id internal server error response
func (o *GetJobIDInternalServerError) WithPayload(payload *models.ResponseBody500) *GetJobIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get job Id internal server error response
func (o *GetJobIDInternalServerError) SetPayload(payload *models.ResponseBody500) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetJobIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
