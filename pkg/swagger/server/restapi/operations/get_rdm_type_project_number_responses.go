// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Donders-Institute/dr-data-stager/pkg/swagger/server/models"
)

// GetRdmTypeProjectNumberOKCode is the HTTP code returned for type GetRdmTypeProjectNumberOK
const GetRdmTypeProjectNumberOKCode int = 200

/*
GetRdmTypeProjectNumberOK success

swagger:response getRdmTypeProjectNumberOK
*/
type GetRdmTypeProjectNumberOK struct {

	/*
	  In: Body
	*/
	Payload *models.Collection `json:"body,omitempty"`
}

// NewGetRdmTypeProjectNumberOK creates GetRdmTypeProjectNumberOK with default headers values
func NewGetRdmTypeProjectNumberOK() *GetRdmTypeProjectNumberOK {

	return &GetRdmTypeProjectNumberOK{}
}

// WithPayload adds the payload to the get rdm type project number o k response
func (o *GetRdmTypeProjectNumberOK) WithPayload(payload *models.Collection) *GetRdmTypeProjectNumberOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get rdm type project number o k response
func (o *GetRdmTypeProjectNumberOK) SetPayload(payload *models.Collection) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRdmTypeProjectNumberOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRdmTypeProjectNumberNotFoundCode is the HTTP code returned for type GetRdmTypeProjectNumberNotFound
const GetRdmTypeProjectNumberNotFoundCode int = 404

/*
GetRdmTypeProjectNumberNotFound collection not found

swagger:response getRdmTypeProjectNumberNotFound
*/
type GetRdmTypeProjectNumberNotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetRdmTypeProjectNumberNotFound creates GetRdmTypeProjectNumberNotFound with default headers values
func NewGetRdmTypeProjectNumberNotFound() *GetRdmTypeProjectNumberNotFound {

	return &GetRdmTypeProjectNumberNotFound{}
}

// WithPayload adds the payload to the get rdm type project number not found response
func (o *GetRdmTypeProjectNumberNotFound) WithPayload(payload string) *GetRdmTypeProjectNumberNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get rdm type project number not found response
func (o *GetRdmTypeProjectNumberNotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRdmTypeProjectNumberNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetRdmTypeProjectNumberInternalServerErrorCode is the HTTP code returned for type GetRdmTypeProjectNumberInternalServerError
const GetRdmTypeProjectNumberInternalServerErrorCode int = 500

/*
GetRdmTypeProjectNumberInternalServerError failure

swagger:response getRdmTypeProjectNumberInternalServerError
*/
type GetRdmTypeProjectNumberInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseBody500 `json:"body,omitempty"`
}

// NewGetRdmTypeProjectNumberInternalServerError creates GetRdmTypeProjectNumberInternalServerError with default headers values
func NewGetRdmTypeProjectNumberInternalServerError() *GetRdmTypeProjectNumberInternalServerError {

	return &GetRdmTypeProjectNumberInternalServerError{}
}

// WithPayload adds the payload to the get rdm type project number internal server error response
func (o *GetRdmTypeProjectNumberInternalServerError) WithPayload(payload *models.ResponseBody500) *GetRdmTypeProjectNumberInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get rdm type project number internal server error response
func (o *GetRdmTypeProjectNumberInternalServerError) SetPayload(payload *models.ResponseBody500) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRdmTypeProjectNumberInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
